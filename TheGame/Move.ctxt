#BlueJ class context
comment0.target=Move
comment0.text=\r\n\ Object\ for\ a\ Move\ that\ the\ player\ makes\r\n\r\n\ @author\ Team\ Mercy\ Score\r\n\ @version\ 5-14-2019\r\n
comment1.params=type
comment1.target=Move(int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Move\r\n
comment2.params=
comment2.target=int\ getType()
comment2.text=\r\n\ Accessor\ for\ the\ type\ of\ the\ move\r\n\ \r\n\ @return\ int\ type\ \ -\ type\ of\ move\ this\ is\r\n
comment3.params=y
comment3.target=boolean\ equals(Move)
comment3.text=\r\n\ Tells\ whether\ one\ move\ is\ equal\ to\ another\r\n\r\n\ @param\ \ y\ \ another\ Move\ to\ compare\ to\r\n\ @return\ \ \ \ if\ the\ Move\ is\ equal\ return\ true,\ else\ return\ false\r\n
comment4.params=y
comment4.target=int\ compareTo(Move)
comment4.text=\r\n\ Compares\ the\ moves\ to\ each\ other\ based\ on\ whether\ the\ incoming\ Move\ \r\n\ will\ beat\ the\ current\ Move\r\n\ \r\n\ Precondition\ -\ the\ incoming\ Move\ type\ is\ not\ equal\ to\ the\ current\ Move\r\n\ \r\n\ @param\ \ y\ \ another\ Move\ to\ compare\ to\r\n\ @return\ \ \ \ if\ the\ incoming\ Move\ beats\ the\ current\ Move,\ the\ program\r\n\ \ \ \ \ \ \ \ \ \ \ \ will\ return\ a\ negative\ value,\ else\ it\ will\ return\ positive\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ the\ current\ Move\ beats\ the\ incoming\ Move,\ otherwise\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ program\ will\ return\ 0\r\n
numComments=5
